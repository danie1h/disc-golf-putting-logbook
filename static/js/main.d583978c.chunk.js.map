{"version":3,"sources":["home/home.js","button/button.js","log-putt/putt-info/putt-info.js","log-putt/display-putt/display-putt.js","log-putt/log-putt.js","overview/overview.js","no-match/no-match.js","PuttingLogApp.js","serviceWorker.js","index.js"],"names":["Home","react_default","a","createElement","className","Link","to","Button","props","onClick","content","PuttInfo","holeNum","button_Button","handleHitBtn","handleMissBtn","DisplayPutt","shape","mode","lib","x","y","radius","fill","draggable","onDragEnd","captureDrag","numPoints","innerRadius","outerRadius","captureClick","width","canvasWidth","height","canvasHeight","LogPutt","putt_info_PuttInfo","display_putt_DisplayPutt","captureCanvasDrag","captureCanvasClick","onClickReset","onClickNext","PuttOverview","puttDetailList","this","puttLog","length","map","putt","key","Component","NoMatch","PuttingLogApp","_this","Object","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","state","puttCanvasShapes","locale","shapeXCoordinate","shapeYCoordinate","bind","assertThisInitialized","captureNextClick","captureResetClick","setState","event","canvasOffsetLeft","document","getElementsByClassName","offsetLeft","canvasOffsetTop","offsetTop","clientX","pageY","target","puttCanvasShapesJSX","stroke","toConsumableArray","concat","_this2","BrowserRouter","Switch","Route","exact","path","component","render","log_putt_LogPutt","assign","overview_overview","Boolean","window","location","hostname","match","ReactDOM","src_PuttingLogApp_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.d583978c.chunk.js","sourcesContent":["import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './home.css'\r\n\r\nexport const Home = () => {\r\n  return(\r\n    <div className=\"home\">\r\n      <h1 className=\"title\">Disc Golf Putting Logbook</h1>\r\n      <h2 className=\"description\">Log Putts, View Stats, Learn and Improve, Repeat</h2>\r\n      <Link to='/disc-golf-putting-logbook/log' className='get-started'>Get Started</Link>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './button.css'\r\n\r\nexport const Button = (props) => {\r\n  return (\r\n  \t<button className={props.className} onClick={props.onClick}>{props.content}</button>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Button } from '../../button/button.js'\r\nimport './putt-info.css'\r\n\r\nexport const PuttInfo = (props) => {\r\n    return(\r\n      <div className=\"putting-details\">\r\n        <h2 className=\"putting-details-title\">Hole #{props.holeNum}</h2>\r\n        <div className=\"hit-or-miss\">\r\n          <Button\r\n            className='hit-btn'\r\n            onClick={props.handleHitBtn}\r\n            content='Hit'\r\n          />\r\n          <Button\r\n            className='miss-btn'\r\n            onClick={props.handleMissBtn}\r\n            content='Miss'\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Stage, Layer, Circle, Star, Line } from 'react-konva'\r\nimport './display-putt.css'\r\n\r\nexport const DisplayPutt = (props) => {\r\n    let shape = (props.mode === \"hit\") ?\r\n        <Circle x={props.x} y={props.y} radius={20} fill=\"green\" draggable onDragEnd={props.captureDrag} />\r\n      : (props.mode === \"miss\") ?\r\n        <Star x={props.x} y={props.y} numPoints={7} innerRadius={10} outerRadius={20} fill=\"red\" draggable onDragEnd={props.captureDrag} />\r\n      :\r\n        <Line />\r\n\r\n    return (\r\n      <div className=\"track-putt\">\r\n        <div className=\"canvas-container\" onClick={props.captureClick}>\r\n          <Stage width={props.canvasWidth} height={props.canvasHeight}>\r\n            <Layer>\r\n              {shape}\r\n            </Layer>\r\n          </Stage>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { PuttInfo } from './putt-info/putt-info.js'\r\nimport { DisplayPutt } from './display-putt/display-putt.js'\r\nimport { Button } from '../button/button.js'\r\nimport './log-putt.css'\r\n\r\nexport const LogPutt = (props) => {\r\n  return (\r\n    <div className='log-putt'>\r\n      <PuttInfo\r\n        holeNum={props.holeNum}\r\n        handleHitBtn={props.handleHitBtn}\r\n        handleMissBtn={props.handleMissBtn}\r\n      />\r\n      <DisplayPutt\r\n        mode={props.mode}\r\n        x={props.x}\r\n        y={props.y}\r\n        captureDrag={props.captureCanvasDrag}\r\n        captureClick={props.captureCanvasClick}\r\n        canvasWidth={props.canvasWidth}\r\n        canvasHeight={props.canvasHeight}\r\n      />\r\n      <div className='master-controls'>\r\n        <Button\r\n          className='reset-all-btn'\r\n          onClick={props.onClickReset}\r\n          content='Reset All'\r\n        />\r\n        <Button\r\n          className='next-btn'\r\n          onClick={props.onClickNext}\r\n          content='Next'\r\n        />\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './overview.css'\r\n\r\nclass PuttOverview extends Component {\r\n  render() {\r\n    let puttDetailList = (this.props.puttLog.length > 1) ?\r\n        this.props.puttLog.map( putt => {\r\n          return(\r\n            <p key={putt.holeNum}>Hole #{putt.holeNum}: {putt.mode} </p>\r\n          )\r\n        })\r\n      :\r\n        <p>No Data Available. Log your putts <Link to='/disc-golf-putting-logbook/log'>here</Link>, then check your overview.</p>\r\n\r\n    return (\r\n      <div className=\"putting-overview\">\r\n        <h1 className=\"title\">Overview</h1>\r\n        <h2>More features and stats coming soon!</h2>\r\n        {puttDetailList}\r\n      </div>\r\n    )\r\n  }\r\n\r\n}\r\n\r\nexport default PuttOverview\r\n","import React from 'react'\r\nimport './no-match.css'\r\n\r\nexport const NoMatch = () => {\r\n  return(\r\n    <div className=\"no-match\">\r\n      <h1 className=\"title\">404 Error: Page Not Found</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\nimport { Circle, Star } from 'react-konva'\nimport { Home } from './home/home.js'\nimport { LogPutt } from './log-putt/log-putt.js'\nimport PuttOverview from './overview/overview.js'\nimport { NoMatch } from './no-match/no-match.js'\nimport './PuttingLogApp.css'\n\nclass PuttingLogApp extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      puttLog: [],\n      puttCanvasShapes: [],\n      holeNum: 1,\n      mode: '',\n      locale: '',\n      canvasWidth: 300,\n      canvasHeight: 300,\n      shapeXCoordinate: 300 / 2,\n      shapeYCoordinate: 300 / 2\n    }\n\n    this.handleHitBtn = this.handleHitBtn.bind(this)\n    this.handleMissBtn = this.handleMissBtn.bind(this)\n    this.captureCanvasClick = this.captureCanvasClick.bind(this)\n    this.captureCanvasDrag = this.captureCanvasDrag.bind(this)\n    this.captureNextClick = this.captureNextClick.bind(this)\n    this.captureResetClick = this.captureResetClick.bind(this)\n  }\n\n  handleHitBtn() {\n    this.setState({\n      mode: 'hit',\n    })\n  }\n\n  handleMissBtn() {\n    this.setState({\n      mode: 'miss',\n    })\n  }\n\n  captureCanvasClick(event) {\n    let canvasOffsetLeft = document.getElementsByClassName('konvajs-content')[0].offsetLeft\n    let canvasOffsetTop = document.getElementsByClassName('konvajs-content')[0].offsetTop\n\n    this.setState({\n      shapeXCoordinate: event.clientX - canvasOffsetLeft,\n      shapeYCoordinate: event.pageY - canvasOffsetTop,\n    })\n  }\n\n  captureCanvasDrag(event) {\n    this.setState({\n      shapeXCoordinate: event.target.x(),\n      shapeYCoordinate: event.target.y()\n    })\n  }\n\n  captureNextClick() {\n    let puttCanvasShapesJSX = (this.state.mode === 'hit') ?\n      <Circle\n        key={this.state.holeNum}\n        x={this.state.shapeXCoordinate}\n        y={this.state.shapeYCoordinate}\n        radius={20}\n        fill='green'\n        stroke='black'\n      />\n      :\n      <Star\n        key={this.state.holeNum}\n        x={this.state.shapeXCoordinate}\n        y={this.state.shapeYCoordinate}\n        numPoints={7}\n        innerRadius={10}\n        outerRadius={20}\n        fill='red'\n        stroke='black'\n      />\n\n\n    this.setState({\n      puttLog: [...this.state.puttLog, {\n        holeNum: this.state.holeNum,\n        mode: this.state.mode,\n        shapeXCoordinate: this.state.shapeXCoordinate,\n        shapeYCoordinate: this.state.shapeYCoordinate\n      }],\n      puttCanvasShapes: [...this.state.puttCanvasShapes, puttCanvasShapesJSX],\n      holeNum: this.state.holeNum + 1,\n      mode: '',\n      shapeXCoordinate: 300 / 2,\n      shapeYCoordinate: 300 / 2\n    })\n  }\n\n  captureOverviewClick() {\n    let puttCanvasShapesJSX = this.state.puttLog.map( putt => {\n      if (putt.mode === 'hit') {\n        return <Circle key={putt.holeNum} x={putt.shapeXCoordinate} y={putt.shapeYCoordinate} radius={20} fill='green' stroke='black' />\n      } else { // putt.mode === 'miss'\n        return <Star key={putt.holeNum} x={putt.shapeXCoordinate} y={putt.shapeYCoordinate} numPoints={7} innerRadius={10} outerRadius={20} fill='red' stroke='black'/>\n      }\n    })\n\n    this.setState({\n      puttCanvasShapes: puttCanvasShapesJSX\n    })\n  }\n\n  captureResetClick() {\n    this.setState({\n      puttLog: [],\n      puttCanvasShapes: [],\n      holeNum: 1,\n      mode: '',\n      shapeXCoordinate: 300 / 2,\n      shapeYCoordinate: 300 / 2\n    })\n  }\n\n  render() {\n    return(\n      <Router>\n        <div className=\"putting-log-app\">\n          <header className='header-container'>\n            <Link to='/disc-golf-putting-logbook/' className='header-title'>Putting Logbook</Link>\n            <nav className='header-nav'>\n              <Link to='/disc-golf-putting-logbook/log' className='header-log'>Log</Link>\n              <Link to='/disc-golf-putting-logbook/overview' className='header-overview'>Overview</Link>\n            </nav>\n          </header>\n\n          <Switch>\n            <Route exact path=\"/disc-golf-putting-logbook/\" component={Home} />\n            <Route\n              path=\"/disc-golf-putting-logbook/log\"\n              render={props => <LogPutt {...props}\n                holeNum={this.state.holeNum}\n                handleHitBtn={this.handleHitBtn}\n                handleMissBtn={this.handleMissBtn}\n                mode={this.state.mode}\n                x={this.state.shapeXCoordinate}\n                y={this.state.shapeYCoordinate}\n                captureCanvasDrag={this.captureCanvasDrag}\n                captureCanvasClick={this.captureCanvasClick}\n                canvasWidth={this.state.canvasWidth}\n                canvasHeight={this.state.canvasHeight}\n                onClickNext={this.captureNextClick}\n                onClickReset={this.captureResetClick}\n              />}\n            />\n            <Route\n              path=\"/disc-golf-putting-logbook/overview\"\n              render={props => <PuttOverview {...props}\n                puttLog={this.state.puttLog}\n              />}\n            />\n            <Route component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default PuttingLogApp\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PuttingLogApp from './PuttingLogApp';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<PuttingLogApp />, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}