{"version":3,"sources":["resources/images/pl-logo.png","home/home.js","about/about.js","button/button.js","log-putt/putt-info/putt-info.js","log-putt/display-putt/display-putt.js","log-putt/log-putt.js","results/results.js","no-match/no-match.js","PuttingLogApp.js","serviceWorker.js","index.js"],"names":["module","exports","__webpack_require__","p","Home","react_default","a","createElement","className","Link","to","id","About","href","Button","props","onClick","content","PuttInfo","holeNum","button_Button","handleHitBtn","handleMissBtn","DisplayPutt","shape","mode","lib","x","y","radius","fill","draggable","onDragEnd","captureDrag","numPoints","innerRadius","outerRadius","captureClick","width","canvasWidth","height","canvasHeight","LogPutt","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","state","activeTagIndexList","metaTagOutput","metaTagsList","map","tag","index","key","event","captureMetaTagClick","activateMetaTags","resetActiveMetaTags","bind","assertThisInitialized","updateMetaTags","metaTagList","activeTagList","_this2","includes","clickedTagIndex","findIndex","item","target","innerText","updatedActiveTagIndexList","filter","updatedMetaTagOutput","setState","toConsumableArray","concat","_this3","onClickReset","putt_info_PuttInfo","display_putt_DisplayPutt","captureCanvasDrag","captureCanvasClick","onClickNext","Component","PuttResults","puttDataList","puttLog","putt","shapeYPosition","shapeXPosition","activeMetaTags","join","length","puttCanvasShapes","NoMatch","PuttingLogApp","shapeXCoordinate","shapeYCoordinate","captureNextClick","captureResetClick","canvasOffsetLeft","document","getElementsByClassName","offsetLeft","canvasOffsetTop","offsetTop","clientX","pageY","positionDetails","xCoordinate","yCoordinate","rangePercentage","widthCenter","heightCenter","giveAmount","positionDescription","getPosition","puttCanvasShapesJSX","stroke","test","BrowserRouter","src","plLogo","alt","Switch","Route","exact","path","component","render","log_putt_log_putt","assign","results_results","Boolean","window","location","hostname","match","ReactDOM","src_PuttingLogApp_0","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"4EAAAA,EAAAC,QAAiBC,EAAAC,EAAuB,0cCI3BC,SAAO,WAClB,OACEC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,6BACAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,eAAd,oDACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,iCAAiCC,GAAG,cAAcH,UAAU,aAArE,eACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,mCAAmCC,GAAG,aAAaH,UAAU,aAAtE,kBCRKI,SAAQ,WACnB,OACEP,EAAAC,EAAAC,cAAA,WAASC,UAAU,SACjBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,8BAEFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACdH,EAAAC,EAAAC,cAAA,WAASC,UAAU,YACjBH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,mBAA2CH,EAAAC,EAAAC,cAAA,KAAGM,KAAK,qCAAR,aAA3C,8dAEFR,EAAAC,EAAAC,cAAA,WAASC,UAAU,aACjBH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAClBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBAAd,+BAEAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACdH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,iBACZH,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGM,KAAK,qEAAR,UACJR,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGM,KAAK,8EAAR,SACJR,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGM,KAAK,6DAAR,WACJR,EAAAC,EAAAC,cAAA,UAAIF,EAAAC,EAAAC,cAAA,KAAGM,KAAK,mDAAR,eCnBDC,SAAS,SAACC,GACrB,OACCV,EAAAC,EAAAC,cAAA,UAAQC,UAAWO,EAAMP,UAAWQ,QAASD,EAAMC,SAAUD,EAAME,WCDzDC,SAAW,SAACH,GACrB,OACEV,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,yBAAd,SAA6CO,EAAMI,SACnDd,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACa,EAAD,CACEZ,UAAU,mBACVQ,QAASD,EAAMM,aACfJ,QAAQ,QAEVZ,EAAAC,EAAAC,cAACa,EAAD,CACEZ,UAAU,oBACVQ,QAASD,EAAMO,cACfL,QAAQ,aCbPM,SAAc,SAACR,GACxB,IAAIS,EAAwB,QAAfT,EAAMU,KACfpB,EAAAC,EAAAC,cAACmB,EAAA,OAAD,CAAQC,EAAGZ,EAAMY,EAAGC,EAAGb,EAAMa,EAAGC,OAAQ,GAAIC,KAAK,QAAQC,WAAS,EAACC,UAAWjB,EAAMkB,cACpE,SAAflB,EAAMU,KACPpB,EAAAC,EAAAC,cAACmB,EAAA,KAAD,CAAMC,EAAGZ,EAAMY,EAAGC,EAAGb,EAAMa,EAAGM,UAAW,EAAGC,YAAa,GAAIC,YAAa,GAAIN,KAAK,MAAMC,WAAS,EAACC,UAAWjB,EAAMkB,cAEpH5B,EAAAC,EAAAC,cAACmB,EAAA,KAAD,MAEJ,OACErB,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBAAmBQ,QAASD,EAAMsB,cAC/ChC,EAAAC,EAAAC,cAACmB,EAAA,MAAD,CAAOY,MAAOvB,EAAMwB,YAAaC,OAAQzB,EAAM0B,cAC7CpC,EAAAC,EAAAC,cAACmB,EAAA,MAAD,KACGF,QCkIAkB,qBA3Ib,SAAAA,EAAY3B,GAAO,IAAA4B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAJ,IACjBC,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAF,GAAAO,KAAAH,KAAM/B,KAEDmC,MAAQ,CACXC,mBAAoB,GACpBC,cAAeT,EAAK5B,MAAMsC,aAAaC,IAAK,SAACC,EAAKC,GAChD,OACEnD,EAAAC,EAAAC,cAACa,EAAD,CACEqC,IAAKD,EACLhD,UAAU,UACVS,QAASsC,EACTvC,QAAS,SAAC0C,GACRf,EAAK5B,MAAM4C,oBAAoBD,GAC/Bf,EAAKiB,iBAAiBF,SAOhCf,EAAKkB,oBAAsBlB,EAAKkB,oBAAoBC,KAAzBlB,OAAAmB,EAAA,EAAAnB,QAAAmB,EAAA,EAAAnB,CAAAD,KAC3BA,EAAKiB,iBAAmBjB,EAAKiB,iBAAiBE,KAAtBlB,OAAAmB,EAAA,EAAAnB,QAAAmB,EAAA,EAAAnB,CAAAD,KACxBA,EAAKqB,eAAiBrB,EAAKqB,eAAeF,KAApBlB,OAAAmB,EAAA,EAAAnB,QAAAmB,EAAA,EAAAnB,CAAAD,KAtBLA,8EAyBJsB,EAAaC,GAAe,IAAAC,EAAArB,KA6BzC,OA5B6BmB,EAAYX,IAAK,SAACC,EAAKC,GAChD,OAAIU,EAAcE,SAASZ,GAEvBnD,EAAAC,EAAAC,cAACa,EAAD,CACEqC,IAAKD,EACLhD,UAAU,iBACVS,QAASsC,EACTvC,QAAS,SAAC0C,GACRS,EAAKpD,MAAM4C,oBAAoBD,GAC/BS,EAAKP,iBAAiBF,MAM1BrD,EAAAC,EAAAC,cAACa,EAAD,CACEqC,IAAKD,EACLhD,UAAU,UACVS,QAASsC,EACTvC,QAAS,SAAC0C,GACRS,EAAKpD,MAAM4C,oBAAoBD,GAC/BS,EAAKP,iBAAiBF,iDAUnBA,GACf,IAAMW,EAAkBvB,KAAKI,MAAME,cAAckB,UAAW,SAAAC,GAC1D,OAAOb,EAAMc,OAAOC,YAAcF,EAAKxD,MAAME,UAG/C,GAAG6B,KAAKI,MAAMC,mBAAmBiB,SAASC,GAAiB,CACzD,IAAMK,EAA4B5B,KAAKI,MAAMC,mBAAmBwB,OAAQ,SAACJ,EAAMf,GAAP,OAAiBe,IAASF,IAC5FO,EAAuB9B,KAAKkB,eAAelB,KAAK/B,MAAMsC,aAAcqB,GAC1E5B,KAAK+B,SAAS,CACZ1B,mBAAoBL,KAAKI,MAAMC,mBAAmBwB,OAAQ,SAACJ,EAAMf,GAAP,OAAiBe,IAASF,IACpFjB,cAAewB,QAEZ,CACL,IAAMF,EAAyB9B,OAAAkC,EAAA,EAAAlC,CAAOE,KAAKI,MAAMC,oBAAlB4B,OAAA,CAAsCV,IAC/DO,EAAuB9B,KAAKkB,eAAelB,KAAK/B,MAAMsC,aAAcqB,GAC1E5B,KAAK+B,SAAS,CACZ1B,mBAAmBP,OAAAkC,EAAA,EAAAlC,CAAKE,KAAKI,MAAMC,oBAAjB4B,OAAA,CAAqCV,IACvDjB,cAAewB,iDAKDlB,GAClB,IAAMkB,EAAuB9B,KAAKkB,eAAelB,KAAK/B,MAAMsC,aAAc,IAE1EP,KAAK+B,SAAS,CACZ1B,mBAAoB,GACpBC,cAAewB,qCAIV,IAAAI,EAAAlC,KACP,OACEzC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,OACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,kBACbH,EAAAC,EAAAC,cAACa,EAAD,CACEZ,UAAU,gBACVQ,QAAS,WACPgE,EAAKjE,MAAMkE,eACXD,EAAKnB,uBAEP5C,QAAQ,cAEVZ,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,qCAAqCF,UAAU,eAAxD,aAGJH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YACdH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,qBACbH,EAAAC,EAAAC,cAAC2E,EAAD,CACE1E,UAAU,YACVW,QAAS2B,KAAK/B,MAAMI,QACpBE,aAAcyB,KAAK/B,MAAMM,aACzBC,cAAewB,KAAK/B,MAAMO,gBAE5BjB,EAAAC,EAAAC,cAAC4E,EAAD,CACE1D,KAAMqB,KAAK/B,MAAMU,KACjBE,EAAGmB,KAAK/B,MAAMY,EACdC,EAAGkB,KAAK/B,MAAMa,EACdK,YAAaa,KAAK/B,MAAMqE,kBACxB/C,aAAcS,KAAK/B,MAAMsE,mBACzB9C,YAAaO,KAAK/B,MAAMwB,YACxBE,aAAcK,KAAK/B,MAAM0B,eAE3BpC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACZsC,KAAKI,MAAME,eAEd/C,EAAAC,EAAAC,cAACa,EAAD,CACEZ,UAAU,oBACVQ,QAAU,WACRgE,EAAKjE,MAAMuE,cACXN,EAAKnB,uBAEP5C,QAAQ,kBApIEsE,cCkDPC,0LAlDX,IAAIC,EAAe3C,KAAK/B,MAAM2E,QAAQpC,IAAK,SAAAqC,GACzC,OACEtF,EAAAC,EAAAC,cAAA,MAAIkD,IAAKkC,EAAKxE,SACZd,EAAAC,EAAAC,cAAA,UAAKoF,EAAKxE,SACVd,EAAAC,EAAAC,cAAA,UAAKoF,EAAKlE,MACVpB,EAAAC,EAAAC,cAAA,UAAKoF,EAAKC,eAAV,KAA4BD,EAAKE,gBACjCxF,EAAAC,EAAAC,cAAA,UAAKoF,EAAKG,eAAeC,KAAK,UAKpC,OACE1F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,eAChBH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,WACAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,yCAEFH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,YAEXiF,EAAaO,OAAS,EACrB3F,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,oBACbH,EAAAC,EAAAC,cAACmB,EAAA,MAAD,CAAOY,MAAOQ,KAAK/B,MAAMwB,YAAaC,OAAQM,KAAK/B,MAAM0B,cACvDpC,EAAAC,EAAAC,cAACmB,EAAA,MAAD,KACGoB,KAAK/B,MAAMkF,oBAIlB5F,EAAAC,EAAAC,cAAA,SAAOC,UAAU,cACfH,EAAAC,EAAAC,cAAA,aACEF,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,oBACAF,EAAAC,EAAAC,cAAA,0BACAF,EAAAC,EAAAC,cAAA,sBACAF,EAAAC,EAAAC,cAAA,oBAGJF,EAAAC,EAAAC,cAAA,aACGkF,KAKPpF,EAAAC,EAAAC,cAAA,KAAGI,GAAG,WAAN,qCAAkDN,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,kCAAT,QAAlD,sCA7Cc6E,cCFbW,SAAU,WACrB,OACE7F,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YACbH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,SAAd,iDC+MS2F,qBAzMb,SAAAA,EAAYpF,GAAM,IAAA4B,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAqD,IAChBxD,EAAAC,OAAAG,EAAA,EAAAH,CAAAE,KAAAF,OAAAI,EAAA,EAAAJ,CAAAuD,GAAAlD,KAAAH,KAAM/B,KAEDmC,MAAQ,CACXwC,QAAS,GACTO,iBAAkB,GAClB9E,QAAS,EACTM,KAAM,GACNc,YAAa,IACbE,aAAc,IACd2D,iBAAkB,IAClBC,iBAAkB,IAClBP,eAAgB,IAGlBnD,EAAKtB,aAAesB,EAAKtB,aAAayC,KAAlBlB,OAAAmB,EAAA,EAAAnB,QAAAmB,EAAA,EAAAnB,CAAAD,KACpBA,EAAKrB,cAAgBqB,EAAKrB,cAAcwC,KAAnBlB,OAAAmB,EAAA,EAAAnB,QAAAmB,EAAA,EAAAnB,CAAAD,KACrBA,EAAK0C,mBAAqB1C,EAAK0C,mBAAmBvB,KAAxBlB,OAAAmB,EAAA,EAAAnB,QAAAmB,EAAA,EAAAnB,CAAAD,KAC1BA,EAAKyC,kBAAoBzC,EAAKyC,kBAAkBtB,KAAvBlB,OAAAmB,EAAA,EAAAnB,QAAAmB,EAAA,EAAAnB,CAAAD,KACzBA,EAAK2D,iBAAmB3D,EAAK2D,iBAAiBxC,KAAtBlB,OAAAmB,EAAA,EAAAnB,QAAAmB,EAAA,EAAAnB,CAAAD,KACxBA,EAAKgB,oBAAsBhB,EAAKgB,oBAAoBG,KAAzBlB,OAAAmB,EAAA,EAAAnB,QAAAmB,EAAA,EAAAnB,CAAAD,KAC3BA,EAAK4D,kBAAoB5D,EAAK4D,kBAAkBzC,KAAvBlB,OAAAmB,EAAA,EAAAnB,QAAAmB,EAAA,EAAAnB,CAAAD,KArBTA,8EAyBhBG,KAAK+B,SAAS,CACZpD,KAAM,gDAKRqB,KAAK+B,SAAS,CACZpD,KAAM,oDAISiC,GACjB,IAAI8C,EAAmBC,SAASC,uBAAuB,mBAAmB,GAAGC,WACzEC,EAAkBH,SAASC,uBAAuB,mBAAmB,GAAGG,UAE5E/D,KAAK+B,SAAS,CACZuB,iBAAkB1C,EAAMoD,QAAUN,EAClCH,iBAAkB3C,EAAMqD,MAAQH,8CAIlBlD,GAChBZ,KAAK+B,SAAS,CACZuB,iBAAkB1C,EAAMc,OAAO7C,IAC/B0E,iBAAkB3C,EAAMc,OAAO5C,iDA+BjC,IAAIoF,EA1BJ,SAAqB1E,EAAOE,EAAQyE,EAAaC,EAAaC,GAC5D,IAAIC,EAAc9E,EAAQ,EACtB+E,EAAe7E,EAAS,EACxB8E,EAAaF,EAAcD,EAC3BI,EAAsB,CACxB5F,EAAG,GACHC,EAAG,IAiBL,OAbE2F,EAAoB5F,EADpBsF,EAAcG,EAAcE,EACJ,OACtBL,EAAcG,EAAcE,EACN,QAEA,SAGxBC,EAAoB3F,EADpBsF,EAAcG,EAAeC,EACL,OACtBJ,EAAcG,EAAeC,EACP,MAEA,SAEnBC,EAGaC,CAAY1E,KAAKI,MAAMX,YAAaO,KAAKI,MAAMT,aAAcK,KAAKI,MAAMkD,iBAAkBtD,KAAKI,MAAMmD,iBAAkB,IAEzIoB,EAA2C,QAApB3E,KAAKI,MAAMzB,KACpCpB,EAAAC,EAAAC,cAACmB,EAAA,OAAD,CACE+B,IAAKX,KAAKI,MAAM/B,QAChBQ,EAAGmB,KAAKI,MAAMkD,iBACdxE,EAAGkB,KAAKI,MAAMmD,iBACdxE,OAAQ,GACRC,KAAK,QACL4F,OAAO,UAGTrH,EAAAC,EAAAC,cAACmB,EAAA,KAAD,CACE+B,IAAKX,KAAKI,MAAM/B,QAChBQ,EAAGmB,KAAKI,MAAMkD,iBACdxE,EAAGkB,KAAKI,MAAMmD,iBACdnE,UAAW,EACXC,YAAa,GACbC,YAAa,GACbN,KAAK,MACL4F,OAAO,UAGX5E,KAAK+B,SAAS,CACZa,QAAQ9C,OAAAkC,EAAA,EAAAlC,CAAKE,KAAKI,MAAMwC,SAAjBX,OAAA,CAA0B,CAC/B5D,QAAS2B,KAAKI,MAAM/B,QACpBM,KAAMqB,KAAKI,MAAMzB,KACjB2E,iBAAkBtD,KAAKI,MAAMkD,iBAC7BC,iBAAkBvD,KAAKI,MAAMmD,iBAC7BR,eAAgBmB,EAAgBrF,EAChCiE,eAAgBoB,EAAgBpF,EAChCkE,eAAgBhD,KAAKI,MAAM4C,kBAE7BG,iBAAiBrD,OAAAkC,EAAA,EAAAlC,CAAKE,KAAKI,MAAM+C,kBAAjBlB,OAAA,CAAmC0C,IACnDtG,QAAS2B,KAAKI,MAAM/B,QAAU,EAC9BM,KAAM,GACN2E,iBAAkB,IAClBC,iBAAkB,IAClBP,eAAgB,iDAIApC,GACd,SAASiE,KAAKjE,EAAMc,OAAOhE,WAC7BsC,KAAK+B,SAAS,CACZiB,eAAgBhD,KAAKI,MAAM4C,eAAenB,OAAQ,SAAApB,GAAG,OAAIA,IAAQG,EAAMc,OAAOC,cAGhF3B,KAAK+B,SAAS,CACZiB,eAAelD,OAAAkC,EAAA,EAAAlC,CAAKE,KAAKI,MAAM4C,gBAAjBf,OAAA,CAAiCrB,EAAMc,OAAOC,0DAMhE3B,KAAK+B,SAAS,CACZa,QAAS,GACTO,iBAAkB,GAClB9E,QAAS,EACTM,KAAM,GACN2E,iBAAkB,IAClBC,iBAAkB,IAClBP,eAAgB,sCAIX,IAAA3B,EAAArB,KACP,OACEzC,EAAAC,EAAAC,cAACqH,EAAA,EAAD,KACEvH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,UAAQC,UAAU,oBAChBH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,8BAA8BF,UAAU,eAAcH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOqH,IAAKC,IAAQxF,MAAM,KAAKE,OAAO,KAAKuF,IAAI,UAC7H1H,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,8BAA8BF,UAAU,gBAAjD,oBAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,mCAAmCF,UAAU,gBAAtD,SACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,iCAAiCF,UAAU,cAApD,OACAH,EAAAC,EAAAC,cAACE,EAAA,EAAD,CAAMC,GAAG,qCAAqCF,UAAU,kBAAxD,aAIJH,EAAAC,EAAAC,cAACyH,EAAA,EAAD,KACE3H,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,8BAA8BC,UAAWhI,IAC3DC,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAOC,OAAK,EAACC,KAAK,mCAAmCC,UAAWxH,IAChEP,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CACEE,KAAK,iCACLE,OAAQ,SAAAtH,GAAK,OAAIV,EAAAC,EAAAC,cAAC+H,EAAD1F,OAAA2F,OAAA,GAAaxH,EAAb,CACfI,QAASgD,EAAKjB,MAAM/B,QACpBE,aAAc8C,EAAK9C,aACnBC,cAAe6C,EAAK7C,cACpBG,KAAM0C,EAAKjB,MAAMzB,KACjBE,EAAGwC,EAAKjB,MAAMkD,iBACdxE,EAAGuC,EAAKjB,MAAMmD,iBACdjB,kBAAmBjB,EAAKiB,kBACxBC,mBAAoBlB,EAAKkB,mBACzB9C,YAAa4B,EAAKjB,MAAMX,YACxBE,aAAc0B,EAAKjB,MAAMT,aACzB6C,YAAanB,EAAKmC,iBAClBrB,aAAcd,EAAKoC,kBACnB5C,oBAAqBQ,EAAKR,oBAC1BN,aAAcc,EAAKpD,MAAMsC,mBAG7BhD,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CACEE,KAAK,qCACLE,OAAQ,SAAAtH,GAAK,OAAIV,EAAAC,EAAAC,cAACiI,EAAD5F,OAAA2F,OAAA,GAAiBxH,EAAjB,CACf2E,QAASvB,EAAKjB,MAAMwC,QACpBnD,YAAa4B,EAAKjB,MAAMX,YACxBE,aAAc0B,EAAKjB,MAAMT,aACzBwD,iBAAkB9B,EAAKjB,MAAM+C,uBAGjC5F,EAAAC,EAAAC,cAAC0H,EAAA,EAAD,CAAOG,UAAWlC,cAlMFX,cCXRkD,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCENC,IAAST,OAAOhI,EAAAC,EAAAC,cAACwI,EAAD,CAAe1F,aAFV,CAAC,WAAY,SAAU,WAAY,WAAY,qBAAsB,qBAAsB,WAAY,KAAM,KAAM,gBAE1EoD,SAASuC,eAAe,SDuGhF,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.d179605b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/pl-logo.c4139eef.png\";","import React from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport './home.css'\r\n\r\nexport const Home = () => {\r\n  return(\r\n    <div className='home'>\r\n      <h1 className='title'>Disc Golf Putting Logbook</h1>\r\n      <h2 className='description'>Log Putts, View Stats, Learn and Improve, Repeat</h2>\r\n      <div className='home-link-items'>\r\n        <Link to='/disc-golf-putting-logbook/log' id='get-started' className='home-link'>Get Started</Link>\r\n        <Link to='/disc-golf-putting-logbook/about' id='learn-more' className='home-link'>Learn More</Link>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './about.css'\r\n\r\nexport const About = () => {\r\n  return(\r\n    <article className='about'>\r\n      <header className='page-header'>\r\n        <h1 className='title'>About the Putting Logbook</h1>\r\n      </header>\r\n      <hr className='divider' />\r\n      <section className='overview'>\r\n        <p className='description'>In the sport of <a href='https://www.pdga.com/introduction'>Disc Golf</a>, putting is an essential aspect and, arguably, one of the greatest challenges in a round. It's not uncommon for players to frequently miss their mark of the basket. Consistency is key, and this project will enable disc golfers to track their putting consistency. By identifying patterns, players will have the ability to leverage their stats to make the necessary modifications that will make them a better putter and, in turn, an improved player. Cue the Putting Logbook.</p>\r\n      </section>\r\n      <section className='resources'>\r\n        <header className='page-header'>\r\n        <h2 className='resources-title'>Related Disc Golf Readings</h2>\r\n        </header>\r\n        <hr className='divider' />\r\n        <ul className='resource-list'>\r\n          <li><a href='https://www.innovadiscs.com/home/disc-golf-faq/glossary-of-terms/'>Lingo</a></li>\r\n          <li><a href='https://allthingsdiscgolf.com/two-disc-golf-putting-tips-focus-simulation/'>Tips</a></li>\r\n          <li><a href='https://mainediscgolf.com/greenhorn/simple-putting-drill/'>Drills</a></li>\r\n          <li><a href='https://dgputtheads.com/disc-golf-putting-games'>Games</a></li>\r\n        </ul>\r\n      </section>\r\n    </article>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport './button.css'\r\n\r\nexport const Button = (props) => {\r\n  return (\r\n  \t<button className={props.className} onClick={props.onClick}>{props.content}</button>\r\n  )\r\n}\r\n","import React from 'react'\r\nimport { Button } from '../../button/button.js'\r\nimport './putt-info.css'\r\n\r\nexport const PuttInfo = (props) => {\r\n    return(\r\n      <div className=\"putting-details\">\r\n        <h2 className=\"putting-details-title\">Hole #{props.holeNum}</h2>\r\n        <div className=\"hit-or-miss\">\r\n          <Button\r\n            className='hit-btn main-btn'\r\n            onClick={props.handleHitBtn}\r\n            content='Hit'\r\n          />\r\n          <Button\r\n            className='miss-btn main-btn'\r\n            onClick={props.handleMissBtn}\r\n            content='Miss'\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { Stage, Layer, Circle, Star, Line } from 'react-konva'\r\nimport './display-putt.css'\r\n\r\nexport const DisplayPutt = (props) => {\r\n    let shape = (props.mode === \"hit\") ?\r\n        <Circle x={props.x} y={props.y} radius={20} fill=\"green\" draggable onDragEnd={props.captureDrag} />\r\n      : (props.mode === \"miss\") ?\r\n        <Star x={props.x} y={props.y} numPoints={7} innerRadius={10} outerRadius={20} fill=\"red\" draggable onDragEnd={props.captureDrag} />\r\n      :\r\n        <Line />\r\n\r\n    return (\r\n      <div className=\"track-putt\">\r\n        <div className=\"canvas-container\" onClick={props.captureClick}>\r\n          <Stage width={props.canvasWidth} height={props.canvasHeight}>\r\n            <Layer>\r\n              {shape}\r\n            </Layer>\r\n          </Stage>\r\n        </div>\r\n      </div>\r\n    )\r\n}\r\n","import React, { Component } from 'react'\r\nimport { PuttInfo } from './putt-info/putt-info.js'\r\nimport { DisplayPutt } from './display-putt/display-putt.js'\r\nimport { Button } from '../button/button.js'\r\nimport { Link } from 'react-router-dom'\r\nimport './log-putt.css'\r\n\r\nclass LogPutt extends Component {\r\n  constructor(props) {\r\n    super(props)\r\n\r\n    this.state = {\r\n      activeTagIndexList: [],\r\n      metaTagOutput: this.props.metaTagsList.map( (tag, index) => {\r\n        return(\r\n          <Button\r\n            key={index}\r\n            className='tag-btn'\r\n            content={tag}\r\n            onClick={(event) => {\r\n              this.props.captureMetaTagClick(event)\r\n              this.activateMetaTags(event)\r\n            }}\r\n          />\r\n        )\r\n      })\r\n    }\r\n\r\n    this.resetActiveMetaTags = this.resetActiveMetaTags.bind(this);\r\n    this.activateMetaTags = this.activateMetaTags.bind(this);\r\n    this.updateMetaTags = this.updateMetaTags.bind(this);\r\n  }\r\n\r\n  updateMetaTags(metaTagList, activeTagList) {\r\n    const updatedMetaTagOutput = metaTagList.map( (tag, index) => {\r\n        if (activeTagList.includes(index)){\r\n          return(\r\n            <Button\r\n              key={index}\r\n              className='tag-btn active'\r\n              content={tag}\r\n              onClick={(event) => {\r\n                this.props.captureMetaTagClick(event)\r\n                this.activateMetaTags(event)\r\n              }}\r\n            />\r\n          )\r\n        } else {\r\n          return(\r\n            <Button\r\n              key={index}\r\n              className='tag-btn'\r\n              content={tag}\r\n              onClick={(event) => {\r\n                this.props.captureMetaTagClick(event)\r\n                this.activateMetaTags(event)\r\n              }}\r\n            />\r\n          )\r\n        }\r\n    })\r\n\r\n    return updatedMetaTagOutput\r\n  }\r\n\r\n  activateMetaTags(event) {\r\n    const clickedTagIndex = this.state.metaTagOutput.findIndex( item => {\r\n      return event.target.innerText === item.props.content\r\n    })\r\n\r\n    if(this.state.activeTagIndexList.includes(clickedTagIndex)){\r\n      const updatedActiveTagIndexList = this.state.activeTagIndexList.filter( (item, index) => item !== clickedTagIndex)\r\n      const updatedMetaTagOutput = this.updateMetaTags(this.props.metaTagsList, updatedActiveTagIndexList)\r\n      this.setState({\r\n        activeTagIndexList: this.state.activeTagIndexList.filter( (item, index) => item !== clickedTagIndex),\r\n        metaTagOutput: updatedMetaTagOutput\r\n      })\r\n    } else {\r\n      const updatedActiveTagIndexList = [...this.state.activeTagIndexList, clickedTagIndex]\r\n      const updatedMetaTagOutput = this.updateMetaTags(this.props.metaTagsList, updatedActiveTagIndexList)\r\n      this.setState({\r\n        activeTagIndexList: [...this.state.activeTagIndexList, clickedTagIndex],\r\n        metaTagOutput: updatedMetaTagOutput\r\n      })\r\n    }\r\n  }\r\n\r\n  resetActiveMetaTags(event) {\r\n    const updatedMetaTagOutput = this.updateMetaTags(this.props.metaTagsList, [])\r\n\r\n    this.setState({\r\n      activeTagIndexList: [],\r\n      metaTagOutput: updatedMetaTagOutput\r\n    })\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <div className='log-putt'>\r\n        <header className='page-header'>\r\n          <h1 className=\"title\">Log</h1>\r\n          <div className='header-options'>\r\n            <Button\r\n              className='reset-all-btn'\r\n              onClick={() => {\r\n                this.props.onClickReset()\r\n                this.resetActiveMetaTags()\r\n              }}\r\n              content='Reset All'\r\n            />\r\n            <Link to='/disc-golf-putting-logbook/results' className='get-results'>Results</Link>\r\n          </div>\r\n        </header>\r\n        <hr className='divider'/>\r\n        <div className='log-putt-controls'>\r\n          <PuttInfo\r\n            className='putt-info'\r\n            holeNum={this.props.holeNum}\r\n            handleHitBtn={this.props.handleHitBtn}\r\n            handleMissBtn={this.props.handleMissBtn}\r\n          />\r\n          <DisplayPutt\r\n            mode={this.props.mode}\r\n            x={this.props.x}\r\n            y={this.props.y}\r\n            captureDrag={this.props.captureCanvasDrag}\r\n            captureClick={this.props.captureCanvasClick}\r\n            canvasWidth={this.props.canvasWidth}\r\n            canvasHeight={this.props.canvasHeight}\r\n          />\r\n          <div className='tags'>\r\n            {this.state.metaTagOutput}\r\n          </div>\r\n          <Button\r\n            className='next-btn main-btn'\r\n            onClick={ () => {\r\n              this.props.onClickNext()\r\n              this.resetActiveMetaTags()\r\n            }}\r\n            content='Next'\r\n          />\r\n        </div>\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default LogPutt;\r\n","import React, { Component } from 'react'\r\nimport { Link } from 'react-router-dom'\r\nimport { Stage, Layer } from 'react-konva'\r\nimport './results.css'\r\n\r\nclass PuttResults extends Component {\r\n  render() {\r\n    let puttDataList = this.props.puttLog.map( putt => {\r\n      return(\r\n        <tr key={putt.holeNum}>\r\n          <td>{putt.holeNum}</td>\r\n          <td>{putt.mode}</td>\r\n          <td>{putt.shapeYPosition}, {putt.shapeXPosition}</td>\r\n          <td>{putt.activeMetaTags.join(', ')}</td>\r\n        </tr>\r\n      )\r\n    })\r\n\r\n    return (\r\n      <div className='putting-results'>\r\n        <header className='page-header'>\r\n          <h1 className='title'>Results</h1>\r\n          <p className='coming-soon'>More features and stats coming soon!</p>\r\n        </header>\r\n        <hr className='divider' />\r\n        {\r\n          (puttDataList.length > 0) ?\r\n            <div>\r\n              <div className='canvas-container'>\r\n                <Stage width={this.props.canvasWidth} height={this.props.canvasHeight}>\r\n                  <Layer>\r\n                    {this.props.puttCanvasShapes}\r\n                  </Layer>\r\n                </Stage>\r\n              </div>\r\n              <table className='data-table'>\r\n                <thead>\r\n                  <tr>\r\n                    <th>Hole #</th>\r\n                    <th>Putt Attempt</th>\r\n                    <th>Position</th>\r\n                    <th>Tags</th>\r\n                  </tr>\r\n                </thead>\r\n                <tbody>\r\n                  {puttDataList}\r\n                </tbody>\r\n              </table>\r\n            </div>\r\n          :\r\n            <p id=\"no-data\">No Data Available. Log your putts <Link to='/disc-golf-putting-logbook/log'>here</Link>, then check your results.</p>\r\n        }\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default PuttResults\r\n","import React from 'react'\r\nimport './no-match.css'\r\n\r\nexport const NoMatch = () => {\r\n  return(\r\n    <div className=\"no-match\">\r\n      <h1 className=\"title\">404 Error: Page Not Found</h1>\r\n    </div>\r\n  )\r\n}\r\n","import React, { Component } from 'react'\nimport { BrowserRouter as Router, Route, Link, Switch } from 'react-router-dom'\nimport { Circle, Star } from 'react-konva'\nimport { Home } from './home/home.js'\nimport { About } from './about/about.js'\nimport LogPutt from './log-putt/log-putt.js'\nimport PuttResults from './results/results.js'\nimport { NoMatch } from './no-match/no-match.js'\nimport plLogo from './resources/images/pl-logo.png'\nimport './PuttingLogApp.css'\n\nclass PuttingLogApp extends Component {\n  constructor(props){\n    super(props)\n\n    this.state = {\n      puttLog: [],\n      puttCanvasShapes: [],\n      holeNum: 1,\n      mode: '',\n      canvasWidth: 300,\n      canvasHeight: 300,\n      shapeXCoordinate: 300 / 2,\n      shapeYCoordinate: 300 / 2,\n      activeMetaTags: []\n    }\n\n    this.handleHitBtn = this.handleHitBtn.bind(this)\n    this.handleMissBtn = this.handleMissBtn.bind(this)\n    this.captureCanvasClick = this.captureCanvasClick.bind(this)\n    this.captureCanvasDrag = this.captureCanvasDrag.bind(this)\n    this.captureNextClick = this.captureNextClick.bind(this)\n    this.captureMetaTagClick = this.captureMetaTagClick.bind(this)\n    this.captureResetClick = this.captureResetClick.bind(this)\n  }\n\n  handleHitBtn() {\n    this.setState({\n      mode: 'hit'\n    })\n  }\n\n  handleMissBtn() {\n    this.setState({\n      mode: 'miss'\n    })\n  }\n\n  captureCanvasClick(event) {\n    let canvasOffsetLeft = document.getElementsByClassName('konvajs-content')[0].offsetLeft\n    let canvasOffsetTop = document.getElementsByClassName('konvajs-content')[0].offsetTop\n\n    this.setState({\n      shapeXCoordinate: event.clientX - canvasOffsetLeft,\n      shapeYCoordinate: event.pageY - canvasOffsetTop,\n    })\n  }\n\n  captureCanvasDrag(event) {\n    this.setState({\n      shapeXCoordinate: event.target.x(),\n      shapeYCoordinate: event.target.y()\n    })\n  }\n\n  captureNextClick() {\n    function getPosition(width, height, xCoordinate, yCoordinate, rangePercentage) {\n      let widthCenter = width / 2;\n      let heightCenter = height / 2;\n      let giveAmount = widthCenter * rangePercentage;\n      let positionDescription = {\n        x: '',\n        y: ''\n      };\n\n      ( xCoordinate < widthCenter - giveAmount ) ?\n        positionDescription.x = 'left'\n      : ( xCoordinate > widthCenter + giveAmount ) ?\n        positionDescription.x = 'right'\n      :\n        positionDescription.x = 'center';\n\n      ( yCoordinate < heightCenter - giveAmount ) ?\n        positionDescription.y = 'high'\n      : ( yCoordinate > heightCenter + giveAmount ) ?\n        positionDescription.y = 'low'\n      :\n        positionDescription.y = 'center';\n\n      return positionDescription;\n    }\n\n    let positionDetails = getPosition(this.state.canvasWidth, this.state.canvasHeight, this.state.shapeXCoordinate, this.state.shapeYCoordinate, .1)\n\n    let puttCanvasShapesJSX = (this.state.mode === 'hit') ?\n      <Circle\n        key={this.state.holeNum}\n        x={this.state.shapeXCoordinate}\n        y={this.state.shapeYCoordinate}\n        radius={20}\n        fill='green'\n        stroke='black'\n      />\n      :\n      <Star\n        key={this.state.holeNum}\n        x={this.state.shapeXCoordinate}\n        y={this.state.shapeYCoordinate}\n        numPoints={7}\n        innerRadius={10}\n        outerRadius={20}\n        fill='red'\n        stroke='black'\n      />\n\n    this.setState({\n      puttLog: [...this.state.puttLog, {\n        holeNum: this.state.holeNum,\n        mode: this.state.mode,\n        shapeXCoordinate: this.state.shapeXCoordinate,\n        shapeYCoordinate: this.state.shapeYCoordinate,\n        shapeXPosition: positionDetails.x,\n        shapeYPosition: positionDetails.y,\n        activeMetaTags: this.state.activeMetaTags\n      }],\n      puttCanvasShapes: [...this.state.puttCanvasShapes, puttCanvasShapesJSX],\n      holeNum: this.state.holeNum + 1,\n      mode: '',\n      shapeXCoordinate: 300 / 2,\n      shapeYCoordinate: 300 / 2,\n      activeMetaTags: []\n    })\n  }\n\n  captureMetaTagClick(event) {\n    if (/active/.test(event.target.className)) {\n      this.setState({\n        activeMetaTags: this.state.activeMetaTags.filter( tag => tag !== event.target.innerText)\n      })\n    } else {\n      this.setState({\n        activeMetaTags: [...this.state.activeMetaTags, event.target.innerText]\n      })\n    }\n  }\n\n  captureResetClick() {\n    this.setState({\n      puttLog: [],\n      puttCanvasShapes: [],\n      holeNum: 1,\n      mode: '',\n      shapeXCoordinate: 300 / 2,\n      shapeYCoordinate: 300 / 2,\n      activeMetaTags: []\n    })\n  }\n\n  render() {\n    return(\n      <Router>\n        <div className='putting-log-app'>\n          <header className='header-container'>\n            <div className='header-home'>\n              <Link to='/disc-golf-putting-logbook/' className='header-logo'><img className='logo' src={plLogo} width='25' height='25' alt='logo' /></Link>\n              <Link to='/disc-golf-putting-logbook/' className='header-title'>Putting Logbook</Link>\n            </div>\n            <nav className='header-nav'>\n              <Link to='/disc-golf-putting-logbook/about' className='header-about'>About</Link>\n              <Link to='/disc-golf-putting-logbook/log' className='header-log'>Log</Link>\n              <Link to='/disc-golf-putting-logbook/results' className='header-results'>Results</Link>\n            </nav>\n          </header>\n\n          <Switch>\n            <Route exact path='/disc-golf-putting-logbook/' component={Home} />\n            <Route exact path='/disc-golf-putting-logbook/about' component={About} />\n            <Route\n              path='/disc-golf-putting-logbook/log'\n              render={props => <LogPutt {...props}\n                holeNum={this.state.holeNum}\n                handleHitBtn={this.handleHitBtn}\n                handleMissBtn={this.handleMissBtn}\n                mode={this.state.mode}\n                x={this.state.shapeXCoordinate}\n                y={this.state.shapeYCoordinate}\n                captureCanvasDrag={this.captureCanvasDrag}\n                captureCanvasClick={this.captureCanvasClick}\n                canvasWidth={this.state.canvasWidth}\n                canvasHeight={this.state.canvasHeight}\n                onClickNext={this.captureNextClick}\n                onClickReset={this.captureResetClick}\n                captureMetaTagClick={this.captureMetaTagClick}\n                metaTagsList={this.props.metaTagsList}\n              />}\n            />\n            <Route\n              path='/disc-golf-putting-logbook/results'\n              render={props => <PuttResults {...props}\n                puttLog={this.state.puttLog}\n                canvasWidth={this.state.canvasWidth}\n                canvasHeight={this.state.canvasHeight}\n                puttCanvasShapes={this.state.puttCanvasShapes}\n              />}\n            />\n            <Route component={NoMatch} />\n          </Switch>\n        </div>\n      </Router>\n    )\n  }\n}\n\nexport default PuttingLogApp\n","const isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\n          );\n        });\n      } else {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n\n              // Execute callback\n              if (config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport PuttingLogApp from './PuttingLogApp';\nimport * as serviceWorker from './serviceWorker';\n\nconst metaTagsList = ['downhill', 'uphill', 'headwind', 'tailwind', 'left to right wind', 'right to left wind', 'bullseye', 'c1', 'c2', 'outside c2']\n\nReactDOM.render(<PuttingLogApp metaTagsList={metaTagsList}/>, document.getElementById('root'));\n\nserviceWorker.unregister();\n"],"sourceRoot":""}